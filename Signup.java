/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniprjct;

import java.awt.Toolkit;
import static java.lang.Character.isDigit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Hariprasad
 */
public class Signup extends javax.swing.JFrame {

    /**
     * Creates new form Signup
     */
    public Signup() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.jpeg")));
        ConfigureFrame.ConfigureFrame(this,"Login",1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        signup = new javax.swing.JButton();
        login = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1800, 1000));
        setSize(new java.awt.Dimension(1800, 1000));
        setType(java.awt.Window.Type.POPUP);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(51, 0, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 102));
        jLabel1.setText("Enter User Name");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(590, 120, 280, 29);

        user.setBackground(new java.awt.Color(153, 255, 204));
        user.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        user.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        jPanel1.add(user);
        user.setBounds(710, 180, 376, 50);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 102));
        jLabel2.setText("Enter Password");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(610, 310, 260, 42);

        signup.setBackground(new java.awt.Color(51, 51, 255));
        signup.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        signup.setText("Sign Up");
        signup.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        signup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupActionPerformed(evt);
            }
        });
        jPanel1.add(signup);
        signup.setBounds(550, 540, 137, 40);

        login.setBackground(new java.awt.Color(0, 0, 255));
        login.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        login.setText("Login");
        login.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        jPanel1.add(login);
        login.setBounds(830, 540, 134, 40);

        cancel.setBackground(new java.awt.Color(51, 51, 255));
        cancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cancel.setText("Cancel");
        cancel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        jPanel1.add(cancel);
        cancel.setBounds(1110, 530, 131, 40);

        password.setBackground(new java.awt.Color(153, 255, 204));
        password.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        password.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(password);
        password.setBounds(720, 380, 376, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon("E:\\Cricket\\url.jpeg")); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 2310, 1080);

        jLabel4.setText("jLabel4");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(710, 250, 380, 30);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 1080));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
    this.dispose();     // TODO add your handling code here:
    }//GEN-LAST:event_cancelActionPerformed

    private void signupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupActionPerformed
      if(signup.getText().equals("Sign Up")){
           // btnSignIn.setEnabled(false);
           // txtUserName.setEnabled(false);
           // passwordtxt.setEnabled(false);
           if((user.getText().trim()).length()<6){
               JOptionPane.showMessageDialog(this, "User Name length should be greater than 5", "User Authentication", 1);
               return;
           }
           if((password.getText().trim()).length()<6){
               JOptionPane.showMessageDialog(this, "Password length should be greater than 5", "User Authentication", 1);
               return;
           }
                int cap=0,num=0,small=0,other=0;
       String pass=password.getText().trim();
       char p[]=pass.toCharArray();
       for(char c:p){
           int i=c;
           if(i>=65 && i<=91)
               cap++;
           else if(i>=97 && i<=123)
               small++;
           else if(isDigit(c)) 
               num++;
           else 
               other++;
       }
       if(cap==0)
           JOptionPane.showMessageDialog(this, "Password should contain atleast 1 capital letter", "User Authentication", 1);
       else if(small==0)
         JOptionPane.showMessageDialog(this, "Password should contain atleast 1 small letter", "User Authentication", 1);
       else if(num==0)
           JOptionPane.showMessageDialog(this, "Password should contain atleast 1 digit", "User Authentication", 1);
       else if(other==0)
            JOptionPane.showMessageDialog(this, "Password should contain atleast 1 special character", "User Authentication", 1);
       else{
            PreparedStatement pstmnt = null;
            ResultSet rs;
            String SQL = "";
            try {
                Connection con = Operation.getConnection("root", "root123");
                 if (con != null) {
                     SQL = "SELECT UserName from USER where UserName=?";
                     pstmnt=con.prepareStatement(SQL);
                     pstmnt.setString(1, user.getText());
                     rs= pstmnt.executeQuery();
                     rs.last();
                     int size = rs.getRow();
                     rs.beforeFirst();
                     if(size==1){
                            JOptionPane.showMessageDialog(this, "User Already exist, try different ID", "User Authentication", 1);
                            user.setText("");                           
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "User does not exist, proceed..", "User Authentication", 1);
                            signup.setText("Proceed");
                            user.setEnabled(true);
                            password.setEnabled(true);
                            }
                 }
            }   catch (SQLException ex){
                  JOptionPane.showMessageDialog(this, "Sorry User Name and Password does match!!", "User Authentication", 1);
        } 
      }
      }else{
            signup.setText("Sign Up");
            try{
                PreparedStatement pstmnt = null;
                ResultSet rs;
                String SQL = "";
                SQL = "INSERT INTO USER Values (?, ?)";
                       //insert into user values ('Admin', 'Admin', 'Admin123#');
                Connection con = Operation.getConnection("root", "root123");
                pstmnt= con.prepareStatement(SQL);
                pstmnt.setString(1, user.getText());
                pstmnt.setString(2, password.getText());
                pstmnt.executeUpdate();
                System.out.println("done..");
                JOptionPane.showMessageDialog(this, "User Created successfully , please relogin", "User Authentication", 1);
                user.setText("");
                password.setText("");
               // btnSignIn.setEnabled(true);
                }  
         catch (SQLException ex){
                  JOptionPane.showMessageDialog(this, "Sorry Error occured!!"+ex, "User Authentication", 1);
        } 
       }  
    }//GEN-LAST:event_signupActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        PreparedStatement pstmnt = null;
        ResultSet rs;
        String SQL = "";
        try {
            Connection con = Operation.getConnection("root","root123");
            if (con == null) {
                JOptionPane.showMessageDialog(this, "Sorry User Name and Password does not match!!", "User Authentication", 1);
                Operation.setConnection(null);
               } 
            else{
                SQL = "SELECT UserName from USER where UserName=? and Password=?";
               pstmnt= con.prepareStatement(SQL);
                pstmnt.setString(1, user.getText());
                pstmnt.setString(2, String.valueOf(password.getPassword()));
                rs= pstmnt.executeQuery();
                rs.last();
                int size = rs.getRow();
                rs.beforeFirst();
                if(size==1){
                   // System.out.println(size);
                     Operation.setConnection(con); 
                    if (user.getText().equals("Admin")){
                          MainMenu.main(null); //full functionalities 
                          this.dispose();
                    }
                  else {
                        MainMenu2.main(null);   //restricted functionalites 
                        this.dispose();
                    }               
                }
                else{
                    JOptionPane.showMessageDialog(this, "Sorry User Name and Password does not match!!", "User Authentication", 1);
                }
            }
     }
    catch (SQLException ex){
               JOptionPane.showMessageDialog(this, "Sorry User Name and Password does not match!!", "User Authentication", 1);
        }
    }//GEN-LAST:event_loginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Signup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton login;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton signup;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
